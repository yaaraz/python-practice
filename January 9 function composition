Python 3.5.2 (v3.5.2:4def2a2901a5, Jun 26 2016, 10:49:35) 
[GCC 4.2.1 (Apple Inc. build 5577)] on darwin
Type "copyright", "credits" or "license()" for more information.
>>> 
for i in range (4):*
SyntaxError: invalid syntax
>>> for i in range (4)
SyntaxError: invalid syntax
>>> for i in range (4):
	print (i)

	
0
1
2
3
>>> ## sum accumulator
>>> s=0 init sum accum to zero
SyntaxError: invalid syntax
>>> s = 0 ## init sum accum to zero
>>> for i in range(4):
	s = s+i
	print (i, s)

	
0 0
1 1
2 3
3 6
>>> 
========== RESTART: /Users/yaarazaslow/Documents/sum accumulator 1 ==========
0 0
1 1
2 3
3 6
>>> 
>>> sum is 6
False
>>> 17/2
8.5
>>> 17/5
3.4
>>> 17//5
3
>>> 17**5
1419857
>>> 17*
SyntaxError: invalid syntax
>>> 17*5
85
>>> 
>>> 1 2
SyntaxError: invalid syntax
>>> 1 + 2
3
>>> print ("hello")
hello
>>> "hello"
'hello'
>>> 'hello'
'hello'
>>> cheese
Traceback (most recent call last):
  File "<pyshell#26>", line 1, in <module>
    cheese
NameError: name 'cheese' is not defined
>>> 6+4*9
42
>>> print(6+4*9)
42
>>> 
=============================== RESTART: Shell ===============================
>>> n1=3
>>> 3=n1
SyntaxError: can't assign to literal
>>> n2=3.0
>>> type(n1)
<class 'int'>
>>> type(n2)
<class 'float'>
>>> s1= 'clarke'
>>> type(s1)
<class 'str'>
>>> <class 'str'>
SyntaxError: invalid syntax
>>> l1 = (1,2,'dog')
>>> type(l1)
<class 'tuple'>
>>> l1 = [1,2,'dog']
>>> type[l1]
Traceback (most recent call last):
  File "<pyshell#40>", line 1, in <module>
    type[l1]
TypeError: 'type' object is not subscriptable
>>> typel(1)
Traceback (most recent call last):
  File "<pyshell#41>", line 1, in <module>
    typel(1)
NameError: name 'typel' is not defined
>>> l1 = [1, 2, 'dog']
>>> type(l1)
<class 'list'>
>>> len(s1)
6
>>> ##why would you be getting six (6) here? It's the number of letters or characters in the string##
>>> len('dogs')
4
>>> len('dogs ')
5
>>> len('dogs' )
4
>>> ##so if it's inside the quotes the space counts as a character##
>>> len(L1)
Traceback (most recent call last):
  File "<pyshell#50>", line 1, in <module>
    len(L1)
NameError: name 'L1' is not defined
>>> len(l1)
3
>>> ##it worked the second time because the program is sensitive to capital letters. Make sure to be consistent in spacing and capital letters##
>>> len('1, 2, 3')
7
>>> ##three different kinds of quotes- single, double, triple ' '' '''
>>> ##three different kinds of quotes- single, double, triple ' '' '''
>>> len (n1)
Traceback (most recent call last):
  File "<pyshell#56>", line 1, in <module>
    len (n1)
TypeError: object of type 'int' has no len()
>>> ##len doesn't work with an int's. only with lists, tuples, etc.##
>>> len(n2) ##use the word contain- think of the variables as containers##
Traceback (most recent call last):
  File "<pyshell#58>", line 1, in <module>
    len(n2) ##use the word contain- think of the variables as containers##
TypeError: object of type 'float' has no len()
>>> s2=str(2017)
>>> ##2017 is an int##
>>> s2
'2017'
>>> ##it has converted it to a string##
>>> type(s2)
<class 'str'>
>>> ##you can ask the program what type you're dealing with by asking type()##
>>> ##asking number of digits in an integer##
>>> len(s2)
4
>>> ##you're asking the length of s2 which equals 4. you can convert the int to a string and find the length of the string##
>>> ##this is function composition##
>>> len(s2)
4
>>> len ( str(4995710623) )
10
>>> ##you've turned the int into a string and then found the length of the string through nesting them##
>>> ##THIS IS FUNCTION COMPOSITION##
>>> TYPE ("HELLO, WORLD!")
Traceback (most recent call last):
  File "<pyshell#73>", line 1, in <module>
    TYPE ("HELLO, WORLD!")
NameError: name 'TYPE' is not defined
>>> type("hello, world!")
<class 'str'>
>>> type(17)
<class 'int'>
>>> s3 = 1 + 10.0
>>> s3 =
SyntaxError: invalid syntax
>>> s3=1+10.0
>>> s3+
SyntaxError: invalid syntax
>>> s3=
SyntaxError: invalid syntax
>>> type(3.2)
<class 'float'>
>>> type(17)
<class 'int'>
>>> type1,3,5,7,9)
SyntaxError: invalid syntax
>>> type (1,3,5,7,9)
Traceback (most recent call last):
  File "<pyshell#84>", line 1, in <module>
    type (1,3,5,7,9)
TypeError: type() takes 1 or 3 arguments
>>> type ('1,3,5,7,9')
<class 'str'>
>>> len ('1,3,5,7,9')
9
>>> print ("bruce's beard")
bruce's beard
>>> ##strings become green##
>>> n = 42,00
>>> n = 42,00
>>> n2=42,000
>>> type(n2)
<class 'tuple'>
>>> n3=42000
>>> type(n3)
<class 'int'>
>>> ##when you use a comma for large numbers, it reads the number as being a tuple and not an integer##
>>> print("what's the big idea?")
what's the big idea?
>>> print("'what's the big idea?' she said")
'what's the big idea?' she said
>>> print ('''"what's the big idea?", she said.''')
"what's the big idea?", she said.
>>> ##EXAMPLES ON HOW TO USE SINGLE DOUBLE AND TRIPLE QUOTES###
>>> 
=============================== RESTART: Shell ===============================
>>> x = 1
>>> x = x +1
>>> y = 20
>>> y = y/2
>>> z = 34
>>> z = z*2
>>> w = 45
>>> w = w-3
>>> ###EXAMPLES OF = NOT BEING THE SAME AS AN EQUAL SIGN, BUT IS ACTUALLY AN ASSIGNMENT##
>>> x,y,z=1,2,3
>>> x=x+5
>>> x=y*4
>>> z=z-2
>>> print (value z)
SyntaxError: invalid syntax
>>> print (z)
1
>>> print(x)
8
>>> print (y)
2
>>> ##PYTHON KEYWORDS:
>>> ## AND AS ASSERT BREAK CLASS CONTINUE DEF DEL ELIF ELSE EXCEPT EXEC FINALLY FOR FROM GLOBAL IF IMPORT IN IS LAMBDA NONLOCAL NOT OR PASS RAISE RETURN TRY WHILE WITH YIELD TRUE FALSE NONE##
>>> 1 = 1
SyntaxError: can't assign to literal
>>> 1 + 1
2
>>> LEN("HELLO")
Traceback (most recent call last):
  File "<pyshell#121>", line 1, in <module>
    LEN("HELLO")
NameError: name 'LEN' is not defined
>>> len ("hello")
5
>>> 17
17
>>> y = 3.14
>>> x len("hello")
SyntaxError: invalid syntax
>>> x = len("hello")
>>> x
5
>>> y
3.14
>>> ##the program remembers. Len is length of numbers##
>>> 
========= RESTART: /Users/yaarazaslow/Desktop/Values and Data types =========
Traceback (most recent call last):
  File "/Users/yaarazaslow/Desktop/Values and Data types", line 3, in <module>
    sum(x+y)
TypeError: 'float' object is not iterable
>>> 
========= RESTART: /Users/yaarazaslow/Desktop/Values and Data types =========
Traceback (most recent call last):
  File "/Users/yaarazaslow/Desktop/Values and Data types", line 3, in <module>
    sum(x, y)
TypeError: 'int' object is not iterable
>>> 
========= RESTART: /Users/yaarazaslow/Desktop/Values and Data types =========
Traceback (most recent call last):
  File "/Users/yaarazaslow/Desktop/Values and Data types", line 3, in <module>
    sum (x, y)
TypeError: 'int' object is not iterable
>>> 
========= RESTART: /Users/yaarazaslow/Desktop/Values and Data types =========
>>> 
========= RESTART: /Users/yaarazaslow/Desktop/Values and Data types =========
>>> x = 1
>>> y = 2
>>> x + y
3
>>> ##I don't understand why my shells aren't working when I run them over here##
>>> 2 * 3
6
>>> 2 **3
8
>>> 3**2
9
>>> 1 + 1
2
>>> len("hello")
5
>>> 17
17
>>> y+3.14
5.140000000000001
>>> x=len("hello")
>>> x
5
>>> y
2
>>> y= 3.14
>>> x
5
>>> y
3.14
>>> 
>>> x = (3+2) **2 +1
>>> x
26
>>> x = x/2
>>> x
13.0
>>> x = (3+2)**(2+1)
>>> x
125
>>> a=2
>>> b=3
>>> x=4*(b-a)
>>> x
4
>>> a=a+1
>>> b=b-1
>>> x
4
>>> int (3.14)
3
>>> int (3.9999)
3
>>> int (3.0)
3
>>> int (-3.999)
-3
>>> ##this doesn't round to the closest integer##
>>> int(minutes/60)
Traceback (most recent call last):
  File "<pyshell#166>", line 1, in <module>
    int(minutes/60)
NameError: name 'minutes' is not defined
>>> minutes=645
>>> hours = minutes // 60
>>> hours
10
>>> int(inutes / 60)
Traceback (most recent call last):
  File "<pyshell#170>", line 1, in <module>
    int(inutes / 60)
NameError: name 'inutes' is not defined
>>> 
=============================== RESTART: Shell ===============================
>>> 7/4
1.75
>>> 7//4
1
>>> minutes=645
>>> hours=minutes//60
>>> hours
10
>>> hour=60
>>> 3 hour=
SyntaxError: invalid syntax
>>> ###go back to pages 19/35 to finish modules###
>>> ###YOU LEAVE FOR VACATION ON FRIDAY AND RETURN 123 DAYS LATER. YSE // AND % TO COMPUTE THE NUMBER OF WEEKS GONE AND NUMBER OF DAYS AFTER FRIDAY THAT YOU RETURNED. WHAT DAY DID YOU RETURN?###
>>> ###start with the weeks###
>>> ###do integer divide###
>>> 123//7
17
>>> ###this gives you division to the nearsest integer
>>> 123%7
4
>>> ###you've been gone for 17 weeks and 4 days###
>>> ###you've been gone four days past friday- you've come back on a tuesday###
>>> ###TRY MORE EXAMPLES LIKE THIS###
>>> for i in range (4):
	print (i)

	
0
1
2
3
>>> for i in range (1,4):
	print (i)

	
1
2
3
>>> for i in range (20,31)
SyntaxError: invalid syntax
>>> for i in range (20,31):
	print (i)

	
20
21
22
23
24
25
26
27
28
29
30
>>> ###goes up to but does not include the last number###
>>> ###range can also use THREE perameters###
>>> for i in range (20,31,2):
	print(i)

	
20
22
24
26
28
30
>>> ###we've changed the increment of the range###
>>> for i in range (1,9,1)
SyntaxError: invalid syntax
>>> for i in range (1,10,2):
	print (i)

	
1
3
5
7
9
>>> for i in range (1,120,2):
	print (i):
		
SyntaxError: invalid syntax
>>> 
>>> for in range (100,121,2):
	
SyntaxError: invalid syntax
>>> for i in range(100,121,2):
	print(i)

	
100
102
104
106
108
110
112
114
116
118
120
>>> for i in range (30,0,-3):
	print (i)

	
30
27
24
21
18
15
12
9
6
3
>>> for i in range (30,-1,-3):
	print(i)

	
30
27
24
21
18
15
12
9
6
3
0
>>> for i in range (1,10,20):
	print(i)

	
1
>>> float(17)
17.0
>>> float("123.45")
123.45
>>> str(17)
'17'
>>> str(123.45)
'123.45'
>>> 
